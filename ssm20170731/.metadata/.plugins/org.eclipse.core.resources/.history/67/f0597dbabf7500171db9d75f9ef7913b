package cn.gqxqd.service;

import java.security.NoSuchAlgorithmException;
import java.util.HashMap;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.sun.org.apache.regexp.internal.recompile;

import cn.gqxqd.dao.UserDao;
import cn.gqxqd.entity.User;
import cn.gqxqd.util.NoteResult;
import cn.gqxqd.util.NoteUtil;

@Service(value = "userService")
public class UserServiceImpl implements UserService {

	@Resource(name = "userDao")
	private UserDao userDao;

	@Override
	public NoteResult checkLogin(String name, String password) {
		NoteResult noteResult = new NoteResult();
		if (name == null || "".equals(name)) {
			noteResult.setStatus(1);
			noteResult.setMsg("用户名不能为空！");
			return noteResult;
		}
		if (password == null || "".equals(password)) {
			noteResult.setStatus(1);
			noteResult.setMsg("密码不能为空！");
			return noteResult;
		}
		User user = userDao.findByName(name);
		if (user == null) {
			noteResult.setStatus(1);
			noteResult.setMsg("用户名不存在！");
			return noteResult;
		}
		try {
			String md5_password = NoteUtil.md5(password);
			if (!user.getCn_user_password().equals(md5_password)) {
				noteResult.setStatus(2);
				noteResult.setMsg("密码错误！");
				return noteResult;
			}
		} catch (Exception e) {
			e.printStackTrace();
			noteResult.setStatus(1);
			noteResult.setMsg(e.getMessage());
			return noteResult;
		}
		noteResult.setStatus(0);
		noteResult.setMsg("登录成功！");
		noteResult.setData(user);
		return noteResult;
	}

	@Override
	public NoteResult addUser(String name, String password, String nick) {
		NoteResult noteResult = new NoteResult();
		// 检查用户名是否已经存在
		User user = userDao.findByName(name);
		if (user != null) {
			noteResult.setStatus(1);
			noteResult.setMsg("用户名已经存在！");
			return noteResult;
		}
		// 注册功能的实现
		user = new User();
		user.setCn_user_name(name);
		user.setCn_user_nick(nick);
		try {
			// 对密码进行md5加密
			String md5_password = NoteUtil.md5(password);
			user.setCn_user_password(md5_password);
			// 获取随机的UUID
			String userId = NoteUtil.createId();
			user.setCn_user_id(userId);

			userDao.save(user);

			noteResult.setStatus(0);
			noteResult.setMsg("注册成功！");
			return noteResult;
		} catch (Exception e) {
			e.printStackTrace();
			noteResult.setStatus(1);
			noteResult.setMsg(e.getMessage());
			return noteResult;
		}
	}

}
